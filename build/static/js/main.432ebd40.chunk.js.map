{"version":3,"sources":["style/GlobalStyle.js","style/mixins.js","state/GlobalState.js","components/MusicPlayer/LyricsScreen/LyricsScreen.jsx","components/MusicPlayer/PlaylistScreen/PlaylistScreen.jsx","components/MusicPlayer/HeaderSection/HeaderSection.jsx","components/MusicPlayer/DisplaySection/SongBox.jsx","components/MusicPlayer/DisplaySection/DisplaySection.jsx","components/MusicPlayer/ControlSection/ControlSection.jsx","components/MusicPlayer/index.jsx","components/App.jsx","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","flexbox","_ref","arguments","length","undefined","_ref$dir","dir","_ref$jc","jc","_ref$ai","ai","concat","GlobalContext","createContext","Provider","LyricsScreen","_useContext","useContext","selectedSong","setShowMenu","setShowLyrics","_useState","useState","_useState2","Object","slicedToArray","lyrics","setLyrics","useEffect","lyricsList","split","map","line","index","react_default","a","createElement","key","LyricsScreenWrapper","bgColor","onClick","LyricsHeadr","BackButton","name","LyricsList","styled","div","LyricsScreen_templateObject","h3","_templateObject2","IoIosReturnLeft","_templateObject3","ul","_templateObject4","PlaylistScreen","Playlist","setPlaylist","songsArray","setShowPlaylist","playlistLi","song","Song","NoteIcon","artist","PlaylistScreenWrapper","PlaylistHeader","PlaylistScreen_BackButton","PlaylistWrpaeer","PlaylistScreen_templateObject","h1","PlaylistScreen_templateObject2","PlaylistScreen_templateObject3","PlaylistScreen_templateObject4","li","_templateObject5","TiNotes","_templateObject6","HeaderSection","showMenu","showLyrics","showPlaylist","HeaderSectionWrapeer","PlayerHeader","MenuButtonWrapper","CloseButton","MenuButton","Header","HeaderSection_NoteIcon","MenuOptions","Lyrics","setTimeout","HeaderSection_Playlist","HeaderSection_templateObject","_ref2","HeaderSection_templateObject2","HeaderSection_templateObject3","IoIosMenu","HeaderSection_templateObject4","IoIosClose","HeaderSection_templateObject5","h2","HeaderSection_templateObject6","IoIosMusicalNote","_templateObject7","_templateObject8","_ref3","_ref4","_templateObject9","_templateObject10","SongBox","isPlaying","SongBoxWrapeer","backgroundImg","SongName","ArtistName","SongImg","img","DiskImage","SongBox_templateObject","SongBox_templateObject2","SongBox_templateObject3","SongBox_templateObject4","SongBox_templateObject5","DisplaySection","sliderPostion","setSelectedSong","slider","useRef","songs","DisplaySection_SongBox","DisplaySectionWrapeer","AllSongsContainer","SongsSlider","ref","DisplaySection_templateObject","DisplaySection_templateObject2","DisplaySection_templateObject3","ControlSection","audioTag","setSliderPostion","songIndex","setSongIndex","setIsPlaying","current","play","pause","nextSong","playAndPause","ControlSectionWrapeer","SongScrollerSection","Player","src","controls","controlsList","onEnded","ButtonsSection","ControlSection_BackButton","PauseButton","PlayButton","ForwardButton","ControlSection_templateObject","ControlSection_templateObject2","audio","ControlSection_templateObject3","ControlSection_templateObject4","MdFirstPage","ControlSection_templateObject5","FaPlay","ControlSection_templateObject6","FaPause","ControlSection_templateObject7","MdLastPage","ControlSection_templateObject8","MusicPlayerWrapper","MusicPlayer_templateObject","MusicPlayer","MusicPlayer_LyricsScreen_LyricsScreen","MusicPlayer_PlaylistScreen_PlaylistScreen","MusicPlayer_HeaderSection_HeaderSection","MusicPlayer_DisplaySection_DisplaySection","MusicPlayer_ControlSection_ControlSection","AppWrapper","App_templateObject","AppHeader","App_templateObject2","AppCredits","App_templateObject3","LinkToLinkedin","App_templateObject4","LinkedinIcon","FaLinkedin","App_templateObject5","HeaderIcon","App_templateObject6","App","href","target","components_MusicPlayer","style_GlobalStyle","rootElement","document","getElementById","ReactDOM","render","children","songsData","setSongsArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","state","action","value","objectSpread2","components_App"],"mappings":"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","file":"static/js/main.432ebd40.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n\tuser-select: none;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n\r\n        /* width */\r\n\t\t\t\t::-webkit-scrollbar {\r\n      width: 5px;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n      background: #f1f1f1;\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n      background: #888;\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n      background: #555;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const flexbox = ({ dir = \"row\", jc = \"center\", ai = \"center\" } = {}) => `\r\n      display: flex;\r\n      flex-direction: ${dir};\r\n      justify-content: ${jc};\r\n      align-items: ${ai}\r\n  `;\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nimport songsData from \"../data/songsData\";\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nconst Provider = GlobalContext.Provider;\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [songsArray, setSongsArray] = useState(songsData);\r\n  const [selectedSong, setSelectedSong] = useState(\"\");\r\n  const [songIndex, setSongIndex] = useState(0);\r\n  const [sliderPostion, setSliderPostion] = useState(0);\r\n  const [showMenu, setShowMenu] = useState(false);\r\n  const [showLyrics, setShowLyrics] = useState(false);\r\n  const [showPlaylist, setShowPlaylist] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  const state = {\r\n    songsArray,\r\n    selectedSong,\r\n    sliderPostion,\r\n    songIndex,\r\n    showMenu,\r\n    showLyrics,\r\n    showPlaylist,\r\n    isPlaying\r\n  };\r\n\r\n  const action = {\r\n    setSongsArray,\r\n    setSelectedSong,\r\n    setSliderPostion,\r\n    setSongIndex,\r\n    setShowMenu,\r\n    setShowLyrics,\r\n    setShowPlaylist,\r\n    setIsPlaying\r\n  };\r\n\r\n  return <Provider value={{ ...state, ...action }}>{children}</Provider>;\r\n};\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { GlobalContext } from \"../../../state/GlobalState\";\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport { IoIosReturnLeft } from \"react-icons/io\";\r\n\r\nconst LyricsScreen = () => {\r\n  const { selectedSong, setShowMenu, setShowLyrics } = useContext(\r\n    GlobalContext\r\n  );\r\n  const [lyrics, setLyrics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const lyricsArray = selectedSong.lyrics.split(\"/\");\r\n    const lyricsList = lyricsArray.map((line, index) => (\r\n      <li key={index}>{line}</li>\r\n    ));\r\n    setLyrics(lyricsList);\r\n  }, [selectedSong]);\r\n\r\n  return (\r\n    <LyricsScreenWrapper\r\n      bgColor={selectedSong.bgColor}\r\n      onClick={() => setShowMenu(false)}\r\n    >\r\n      <LyricsHeadr>\r\n        <BackButton onClick={() => setShowLyrics(false)} />\r\n        {selectedSong.name}\r\n      </LyricsHeadr>\r\n      <LyricsList>{lyrics}</LyricsList>\r\n    </LyricsScreenWrapper>\r\n  );\r\n};\r\n\r\nexport default LyricsScreen;\r\n\r\nconst LyricsScreenWrapper = styled.div`\r\n  position: absolute;\r\n  ${flexbox()};\r\n  align-content: center;\r\n  justify-content: space-evenly;\r\n  flex-wrap: wrap;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: blue;\r\n  z-index: 1;\r\n  background: ${({ bgColor }) => bgColor};\r\n  /* border: 1px solid black; */\r\n  font-family: \"Kanit\", sans-serif;\r\n`;\r\n\r\nconst LyricsHeadr = styled.h3`\r\n  /* border: 1px solid black; */\r\n  width: 100%;\r\n  height: 10%;\r\n  ${flexbox()};\r\n  text-align: center;\r\n  align-self: flex-start;\r\n  color: #dfebed;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  position: relative;\r\n`;\r\n\r\nconst BackButton = styled(IoIosReturnLeft)`\r\n  position: absolute;\r\n  left: 5%;\r\n  font-size: 2rem;\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.2);\r\n    color: lightgrey;\r\n  }\r\n`;\r\n\r\nconst LyricsList = styled.ul`\r\n  overflow-y: auto;\r\n  /* border: 1px solid black; */\r\n  width: 90%;\r\n  height: 50%;\r\n  font-size: 0.9rem;\r\n  color: white;\r\n  text-align: center;\r\n  line-height: 18px;\r\n\r\n  @media (max-width: 1200px) {\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport { GlobalContext } from \"../../../state/GlobalState\";\r\n\r\nimport { TiNotes } from \"react-icons/ti\";\r\nimport { IoIosReturnLeft } from \"react-icons/io\";\r\n\r\nconst PlaylistScreen = () => {\r\n  const [Playlist, setPlaylist] = useState([]);\r\n\r\n  const { songsArray, setShowMenu, setShowPlaylist } = useContext(\r\n    GlobalContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    const playlistLi = songsArray.map(song => (\r\n      <Song key={song.name}>\r\n        <span>\r\n          <NoteIcon /> {song.name} by {song.artist}\r\n        </span>\r\n        <span> {song.length} </span>\r\n      </Song>\r\n    ));\r\n    setPlaylist(playlistLi);\r\n  }, []);\r\n\r\n  return (\r\n    <PlaylistScreenWrapper onClick={() => setShowMenu(false)}>\r\n      <PlaylistHeader>\r\n        <BackButton onClick={() => setShowPlaylist(false)} />\r\n        Playlist\r\n      </PlaylistHeader>\r\n      <PlaylistWrpaeer>{Playlist}</PlaylistWrpaeer>\r\n    </PlaylistScreenWrapper>\r\n  );\r\n};\r\n\r\nexport default PlaylistScreen;\r\n\r\nconst PlaylistScreenWrapper = styled.div`\r\n  position: absolute;\r\n  ${flexbox()};\r\n  align-content: center;\r\n  justify-content: space-evenly;\r\n  flex-wrap: wrap;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: blue;\r\n  z-index: 1;\r\n  background: linear-gradient(to bottom, #2b5876, #4e4376);\r\n  /* border: 1px solid black; */\r\n  font-family: \"Kanit\", sans-serif;\r\n`;\r\n\r\nconst PlaylistHeader = styled.h1`\r\n  ${flexbox()};\r\n  width: 70%;\r\n  height: 10%;\r\n  color: #dfebed;\r\n  font-size: 1.5rem;\r\n  border-bottom: 1px solid lightgray;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst BackButton = styled(IoIosReturnLeft)`\r\n  position: absolute;\r\n  left: 5%;\r\n  font-size: 2rem;\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.2);\r\n    color: lightgrey;\r\n  }\r\n`;\r\n\r\nconst PlaylistWrpaeer = styled.ul`\r\n  height: 50%;\r\n  width: 90%;\r\n  /* border: 1px solid black; */\r\n  line-height: 30px;\r\n  overflow-x: auto;\r\n`;\r\n\r\nconst Song = styled.li`\r\n  height: 15%;\r\n  color: whitesmoke;\r\n  ${flexbox()};\r\n  justify-content: space-between;\r\n  span {\r\n    ${flexbox()};\r\n  }\r\n\r\n  @media (max-width: 1200px) {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst NoteIcon = styled(TiNotes)`\r\n  padding-right: 5px;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport { GlobalContext } from \"../../../state/GlobalState\";\r\n\r\nimport { IoIosMusicalNote, IoIosMenu, IoIosClose } from \"react-icons/io\";\r\n\r\nconst HeaderSection = () => {\r\n  const {\r\n    showMenu,\r\n    setShowMenu,\r\n    setShowLyrics,\r\n    showLyrics,\r\n    showPlaylist,\r\n    setShowPlaylist\r\n  } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <HeaderSectionWrapeer showMenu={showMenu}>\r\n      <PlayerHeader>\r\n        <MenuButtonWrapper>\r\n          {showMenu ? (\r\n            <CloseButton onClick={() => setShowMenu(!showMenu)} />\r\n          ) : (\r\n            <MenuButton onClick={() => setShowMenu(!showMenu)} />\r\n          )}\r\n        </MenuButtonWrapper>\r\n        <Header>\r\n          PLAY\r\n          <NoteIcon />\r\n        </Header>\r\n      </PlayerHeader>\r\n      <MenuOptions showMenu={showMenu}>\r\n        <Lyrics\r\n          onClick={() => {\r\n            setShowPlaylist(false);\r\n            setShowLyrics(!showLyrics);\r\n            setTimeout(() => setShowMenu(!showMenu), 0);\r\n            // setShowMenu(!showMenu);\r\n          }}\r\n        >\r\n          Lyrics\r\n        </Lyrics>\r\n        <Playlist\r\n          onClick={() => {\r\n            setShowLyrics(false);\r\n            setShowPlaylist(!showPlaylist);\r\n            setTimeout(() => setShowMenu(!showMenu), 0);\r\n          }}\r\n        >\r\n          Playlist\r\n        </Playlist>\r\n      </MenuOptions>\r\n    </HeaderSectionWrapeer>\r\n  );\r\n};\r\n\r\nexport default HeaderSection;\r\n\r\nconst HeaderSectionWrapeer = styled.div`\r\n  ${flexbox()};\r\n  width: 100%;\r\n  height: 10%;\r\n  background: #e0fffb;\r\n  border-radius: 10px 10px 0 0;\r\n  position: relative;\r\n  z-index: 1;\r\n  /* border: 1px solid black; */\r\n\r\n  ::after {\r\n    content: \"\";\r\n    width: 220%;\r\n    height: ${({ showMenu }) => (showMenu ? \"600%\" : \"250%\")};\r\n    background: #e0fffb;\r\n    position: absolute;\r\n    bottom: -90%;\r\n    bottom: ${({ showMenu }) => (showMenu ? \"-350%\" : \"-100%\")};\r\n    right: -12%;\r\n    border-radius: 60%;\r\n    z-index: -1;\r\n    transition: 0.3s linear;\r\n    border-bottom: 7px solid #62929a;\r\n  }\r\n`;\r\n\r\nconst PlayerHeader = styled.div`\r\n  font-family: \"Fredoka One\", cursive;\r\n  width: 100%;\r\n  ${flexbox()};\r\n  justify-content: space-evenly;\r\n  position: relative;\r\n  bottom: -40%;\r\n\r\n  span {\r\n    color: #fc5c9c;\r\n    color: #62929a;\r\n  }\r\n`;\r\nconst MenuButtonWrapper = styled.div`\r\n  font-size: 1.3rem;\r\n`;\r\n\r\nconst MenuButton = styled(IoIosMenu)`\r\n  position: absolute;\r\n  left: 5%;\r\n  top: 20%;\r\n  font-size: 2rem;\r\n  align-self: flex-start;\r\n  transition: 0.2s linear;\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\nconst CloseButton = styled(IoIosClose)`\r\n  position: absolute;\r\n  left: 5%;\r\n  top: 20%;\r\n  font-size: 2rem;\r\n  align-self: flex-start;\r\n  transition: 0.2s linear;\r\n  :hover {\r\n    cursor: pointer;\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  width: 100%;\r\n  text-align: center;\r\n\r\n  font-size: 3.2rem;\r\n  @media (max-width: 1900px) {\r\n    font-size: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst NoteIcon = styled(IoIosMusicalNote)`\r\n  color: #62929a;\r\n`;\r\n\r\nconst MenuOptions = styled.div`\r\n  opacity: ${({ showMenu }) => (showMenu ? 1 : 0)};\r\n  width: 100%;\r\n  height: 100%;\r\n  height: ${({ showMenu }) => (showMenu ? \"100%\" : \"0\")};\r\n  position: absolute;\r\n  bottom: -200%;\r\n  font-family: \"Source Sans Pro\", sans-serif;\r\n  transition: 0.15s ease-in;\r\n`;\r\nconst Lyrics = styled.div`\r\n  /* border: 1px solid black; */\r\n  margin-top: 5px;\r\n  width: 100%;\r\n  height: 50%;\r\n  text-align: center;\r\n  font-size: 1.7rem;\r\n  font-weight: bold;\r\n  color: #008698;\r\n  ${flexbox()};\r\n  transition: 0.2s linear;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    color: #38486f;\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  @media (max-width: 1400px) {\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst Playlist = styled(Lyrics)`\r\n  margin-top: 10px;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport { GlobalContext } from \"../../../state/GlobalState\";\r\n\r\nconst SongBox = ({ song }) => {\r\n  const { isPlaying } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <SongBoxWrapeer backgroundImg={song.bgColor}>\r\n      <SongName>{song.name}</SongName>\r\n      <ArtistName>{song.artist}</ArtistName>\r\n      <SongImg backgroundImg={song.img}>\r\n        <DiskImage isPlaying={isPlaying} />\r\n      </SongImg>\r\n    </SongBoxWrapeer>\r\n  );\r\n};\r\n\r\nexport default SongBox;\r\n\r\nconst SongBoxWrapeer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  ${flexbox()};\r\n  flex-wrap: wrap;\r\n  flex: 0 0 auto;\r\n`;\r\n\r\nconst SongImg = styled.div`\r\n  height: 50%;\r\n  width: 50%;\r\n  background-size: cover;\r\n  box-shadow: -1px 0px 5px 0px rgba(0, 0, 0, 0.59);\r\n  box-shadow: -1px -1px 5px 0px rgba(255, 255, 255, 0.1);\r\n  background-image: ${({ backgroundImg }) => `url(${backgroundImg})`};\r\n  background-size: cover;\r\n  background-position: center;\r\n  background-size: 100% 100%;\r\n  background-repeat: no-repeat;\r\n  position: relative;\r\n`;\r\n\r\nconst DiskImage = styled.div`\r\n  position: absolute;\r\n  height: 80%;\r\n  width: 80%;\r\n  transition: 0.2s ease-in;\r\n  left: ${({ isPlaying }) => (isPlaying ? \"-40%\" : 0)};\r\n  top: 10%;\r\n  background-image: url(\"https://lh3.googleusercontent.com/proxy/V-VpFTafdCfnMPBvSYw-dEWtavYH_aioKzzE6gQptCrLHRGAaYkTzDC0wCCLrGBUX5gsiPOVP2PuKKwhqdlBfZMnwhNKBJbY2mB5EOjGMOZkDHv88xVISqwPilsp\");\r\n  background-position: center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  /* transform: translateX(-50%); */\r\n  z-index: -1;\r\n  animation: ${({ isPlaying }) =>\r\n    isPlaying ? \"spin 4s linear infinite\" : \"none\"};\r\n  @keyframes spin {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst SongName = styled.h2`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: white;\r\n  font-family: \"Archivo Black\", sans-serif;\r\n  font-size: 2.2rem;\r\n  letter-spacing: 2px;\r\n  @media (max-width: 1400px) {\r\n    font-size: 1.7rem;\r\n  }\r\n`;\r\n\r\nconst ArtistName = styled.h3`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: lightgrey;\r\n  font-family: \"Roboto Slab\", serif;\r\n  font-size: 1.1rem;\r\n  @media (max-width: 1400px) {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { GlobalContext } from \"../../../state/GlobalState\";\r\nimport { flexbox } from \"../../../style/mixins\";\r\n\r\nimport SongBox from \"./SongBox\";\r\n\r\nconst DisplaySection = () => {\r\n  const {\r\n    songsArray,\r\n    setSelectedSong,\r\n    selectedSong,\r\n    sliderPostion,\r\n    setShowMenu\r\n  } = useContext(GlobalContext);\r\n\r\n  const slider = useRef();\r\n\r\n  const songs = songsArray.map(song => <SongBox key={song.name} song={song} />);\r\n\r\n  return (\r\n    <DisplaySectionWrapeer onClick={() => setShowMenu(false)}>\r\n      <AllSongsContainer>\r\n        <SongsSlider\r\n          ref={slider}\r\n          songsArray={songsArray}\r\n          sliderPostion={sliderPostion}\r\n        >\r\n          {songs}\r\n        </SongsSlider>\r\n      </AllSongsContainer>\r\n    </DisplaySectionWrapeer>\r\n  );\r\n};\r\n\r\nexport default DisplaySection;\r\n\r\nconst DisplaySectionWrapeer = styled.div`\r\n  width: 100%;\r\n  height: 60%;\r\n  /* border: 1px solid black; */\r\n  align-self: flex-end;\r\n  margin-top: 10%;\r\n  ${flexbox()};\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst AllSongsContainer = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  /* border: 1px solid green; */\r\n  overflow: hidden;\r\n  /* overflow-x: auto; */\r\n`;\r\n\r\nconst SongsSlider = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  /* transition: 0.2s linear; */\r\n  transition: ${({ sliderPostion, songsArray }) =>\r\n    sliderPostion === 0 || sliderPostion === 100 * songsArray.length - 100\r\n      ? \"none\"\r\n      : \"0.2s linear\"};\r\n  transform: ${({ sliderPostion }) => `translateX(-${sliderPostion}%)`};\r\n  @media (max-width: 900px) {\r\n    /* width: 80%; */\r\n    /* overflow-x: auto; */\r\n  }\r\n`;\r\n","import React, { useEffect, useContext, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { flexbox } from \"../../../style/mixins\";\r\nimport { GlobalContext } from \"../../../state/GlobalState\";\r\n\r\nimport { FaPlay, FaRegHeart, FaPause } from \"react-icons/fa\";\r\nimport { MdLastPage, MdFirstPage } from \"react-icons/md\";\r\n\r\nconst ControlSection = () => {\r\n  const audioTag = useRef();\r\n  const {\r\n    songsArray,\r\n    setSelectedSong,\r\n    selectedSong,\r\n    sliderPostion,\r\n    setSliderPostion,\r\n    songIndex,\r\n    setSongIndex,\r\n    setShowMenu,\r\n    isPlaying,\r\n    setIsPlaying\r\n  } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (isPlaying) {\r\n        audioTag.current.play();\r\n      } else {\r\n        audioTag.current.pause();\r\n      }\r\n    }, 0);\r\n  }, [songIndex]);\r\n\r\n  const nextSong = () => {\r\n    if (sliderPostion < 100 * songsArray.length - 100) {\r\n      setSliderPostion(sliderPostion + 100);\r\n      setSongIndex(songIndex + 1);\r\n    } else {\r\n      setSliderPostion(0);\r\n      setSongIndex(0);\r\n    }\r\n    // setIsPlaying(true);\r\n  };\r\n\r\n  const Back = () => {\r\n    if (sliderPostion === 0) {\r\n      setSliderPostion(100 * songsArray.length - 100);\r\n      setSongIndex(songsArray.length - 1);\r\n    } else if (sliderPostion > -100 * songsArray.length + 100) {\r\n      setSliderPostion(sliderPostion - 100);\r\n      setSongIndex(songIndex - 1);\r\n    } else {\r\n      setSliderPostion(0);\r\n      setSongIndex(0);\r\n    }\r\n    setIsPlaying(false);\r\n  };\r\n\r\n  const playAndPause = () => {\r\n    if (isPlaying) {\r\n      audioTag.current.pause();\r\n    } else {\r\n      audioTag.current.play();\r\n    }\r\n\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  return (\r\n    <ControlSectionWrapeer onClick={() => setShowMenu(false)}>\r\n      <SongScrollerSection>\r\n        <Player\r\n          ref={audioTag}\r\n          src={selectedSong.song}\r\n          play={isPlaying}\r\n          controls={true}\r\n          controlsList=\"nodownload\"\r\n          onEnded={() => nextSong()}\r\n        />\r\n        {/* <LikeButton /> */}\r\n      </SongScrollerSection>\r\n      <ButtonsSection>\r\n        <BackButton onClick={() => Back()} />\r\n        {isPlaying ? (\r\n          <PauseButton onClick={() => playAndPause()} />\r\n        ) : (\r\n          <PlayButton onClick={() => playAndPause()} />\r\n        )}\r\n        <ForwardButton onClick={() => nextSong()} />\r\n      </ButtonsSection>\r\n    </ControlSectionWrapeer>\r\n  );\r\n};\r\n\r\nexport default ControlSection;\r\n\r\nconst ControlSectionWrapeer = styled.div`\r\n  width: 100%;\r\n  height: 20%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-content: flex-end;\r\n  align-self: flex-end;\r\n  z-index: 2;\r\n`;\r\n\r\nconst SongScrollerSection = styled.div`\r\n  ${flexbox()};\r\n  height: 30%;\r\n  width: 100%;\r\n  background: #e0fffb;\r\n  border-top: 4px solid #62929a;\r\n  /* border-bottom: 3px double #62929a; */\r\n  align-self: flex-end;\r\n  background: whitesmoke;\r\n`;\r\n\r\nconst Player = styled.audio`\r\n  /* height: 100%; */\r\n  height: 100%;\r\n  width: 100%;\r\n  /* border: 1px solid black; */\r\n  outline: none;\r\n\r\n  ::-webkit-media-controls-play-button {\r\n    display: none;\r\n  }\r\n  ::-webkit-media-controls-panel {\r\n    background: #fcefee;\r\n    background: white;\r\n    background: #e0fffb;\r\n  }\r\n\r\n  ::-webkit-media-controls-mute-button {\r\n  }\r\n\r\n  ::-webkit-media-controls-current-time-display {\r\n    font-weight: bold;\r\n  }\r\n\r\n  ::-webkit-media-controls-time-remaining-display {\r\n    /* color: lightskyblue; */\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst ButtonsSection = styled.div`\r\n  ${flexbox()};\r\n  height: 50%;\r\n  width: 100%;\r\n  /* border: 1px solid black; */\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  font-size: 2rem;\r\n  transition: 0.2s linear;\r\n  background: white;\r\n  background: #e0fffb;\r\n  align-self: flex-end;\r\n`;\r\n\r\nconst BackButton = styled(MdFirstPage)`\r\n  flex-basis: 30%;\r\n  width: 30%;\r\n  :hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst PlayButton = styled(FaPlay)`\r\n  width: 30%;\r\n  flex-basis: 30%;\r\n  :hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst PauseButton = styled(FaPause)`\r\n  width: 30%;\r\n  flex-basis: 30%;\r\n  :hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ForwardButton = styled(MdLastPage)`\r\n  width: 30%;\r\n  flex-basis: 30%;\r\n  :hover {\r\n    transform: scale(1.1);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { GlobalContext } from \"../../state/GlobalState\";\r\n\r\nimport LyricsScreen from \"./LyricsScreen/LyricsScreen\";\r\nimport PlaylistScreen from \"./PlaylistScreen/PlaylistScreen\";\r\nimport HeadSection from \"./HeaderSection/HeaderSection\";\r\nimport DisplaySection from \"./DisplaySection/DisplaySection\";\r\nimport ControlSection from \"./ControlSection/ControlSection\";\r\n\r\nconst MusicPlayer = () => {\r\n  const {\r\n    songsArray,\r\n    setSelectedSong,\r\n    selectedSong,\r\n    songIndex,\r\n    showLyrics,\r\n    showPlaylist\r\n  } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    setSelectedSong(songsArray[songIndex]);\r\n  }, [songIndex]);\r\n\r\n  // console.log(selectedSong);\r\n\r\n  return (\r\n    <MusicPlayerWrapper backgroundImg={selectedSong.bgColor}>\r\n      {showLyrics ? <LyricsScreen /> : null}\r\n      {showPlaylist ? <PlaylistScreen /> : null}\r\n      <HeadSection />\r\n      <DisplaySection />\r\n      <ControlSection />\r\n    </MusicPlayerWrapper>\r\n  );\r\n};\r\n\r\nconst MusicPlayerWrapper = styled.div`\r\n  height: 70%;\r\n  width: 30%;\r\n  background: #fcefee;\r\n  border-radius: 20px;\r\n  max-width: 450px;\r\n  min-height: 400px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  position: relative;\r\n  flex-wrap: wrap;\r\n  background: ${({ backgroundImg }) => backgroundImg};\r\n\r\n  @media (max-width: 1900px) {\r\n    width: 30%;\r\n    height: 80%;\r\n  }\r\n  @media (max-width: 1200px) {\r\n    width: 60%;\r\n    height: 80%;\r\n  }\r\n  @media (max-width: 700px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport default MusicPlayer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"../style/fonts.css\";\r\n\r\nimport GlobalStyle from \"../style/GlobalStyle\";\r\nimport { flexbox } from \"../style/mixins\";\r\nimport { FaPlay, FaLinkedin } from \"react-icons/fa\";\r\n\r\nimport MusicPlayer from \"./MusicPlayer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppWrapper>\r\n      <AppHeader>\r\n        Play\r\n        <span>\r\n          <HeaderIcon />\r\n        </span>\r\n      </AppHeader>\r\n      <AppCredits>\r\n        Made from scratch by{\" \"}\r\n        <span>\r\n          <LinkToLinkedin\r\n            href=\"https://www.linkedin.com/in/oren-kesler-934245144/\"\r\n            target=\"_blank\"\r\n          >\r\n            Oren Kesler <LinkedinIcon />\r\n          </LinkToLinkedin>\r\n        </span>\r\n      </AppCredits>\r\n      <MusicPlayer />\r\n      <GlobalStyle />\r\n    </AppWrapper>\r\n  );\r\n};\r\n\r\nconst AppWrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  ${flexbox()};\r\n  align-content: center;\r\n  flex-wrap: wrap;\r\n  background: #303a52;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst AppHeader = styled.h1`\r\n  /* border: 1px solid black; */\r\n  width: 100%;\r\n  ${flexbox({ ai: \"flex-end\" })};\r\n  color: #482ff7;\r\n  color: #c82586;\r\n  font-size: 4rem;\r\n  font-family: \"Modak\";\r\n  align-self: flex-start;\r\n  padding-top: 10px;\r\n  height: 10%;\r\n`;\r\nconst AppCredits = styled.h3`\r\n  width: 100%;\r\n  ${flexbox({ ai: \"flex-end\" })};\r\n  color: #973961;\r\n  font-size: 1.5rem;\r\n  align-self: flex-start;\r\n  font-family: \"Kanit\", sans-serif;\r\n  margin-bottom: 10px;\r\n  /* height: 5%; */\r\n  /* border: 1px solid black; */\r\n\r\n  @media (max-width: 900px) {\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst LinkToLinkedin = styled.a`\r\n  text-decoration: none;\r\n  color: #d62b70;\r\n  padding-left: 5px;\r\n  transition: 0.2s ease-in;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    color: #ff006c;\r\n  }\r\n`;\r\n\r\nconst LinkedinIcon = styled(FaLinkedin)`\r\n  font-size: 1rem;\r\n\r\n  @media (max-width: 900px) {\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n\r\nconst HeaderIcon = styled(FaPlay)`\r\n  font-size: 1.5rem;\r\n  padding-left: 10px;\r\n  color: #775ada;\r\n  color: #584f84;\r\n`;\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport { GlobalProvider } from \"./state/GlobalState\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <GlobalProvider>\n    <App />\n  </GlobalProvider>,\n  rootElement\n);\n"],"sourceRoot":""}